@model HomeWeb4Pi.Models.Parts.StopwatchModel

<div class="stopwatch">
  <div class="stopwatch-current">00:00</div>
  <div class="stopwatch-presets">
    @foreach (var preset in Model.Presets)
    {
      <div class="stopwatch-preset-item" data-minutes="@preset.Minutes">@preset.Period</div>
    }
  </div>
</div>

<script type="text/javascript">

  var endTime = null;
  var stopwatchRunning = false;
  var alarmAudio = null;

  $(document).ready(function () {

    $('.stopwatch-preset-item').click(function () {
      onPresetClick(this);
    });

    $('.stopwatch-current').click(function () {
      stopElapsedEffect();
    });

    showStopwatchValue();
  }); // document.ready end

  function onPresetClick(element) {
    if (stopwatchRunning) {
      return;
    }
    var minutes = Number.parseInt(element.dataset.minutes);
    startStopwatch(minutes);
  }

  function startStopwatch(minutes) {
    stopElapsedEffect();
    endTime = new Date();
    endTime.setMinutes(endTime.getMinutes() + minutes);
    // just for dev test
    //endTime.setSeconds(endTime.getSeconds() + minutes);
    stopwatchRunning = true;
    showStopwatchValue();
    setStopwatchTimeout();
  }

  function stopStopwatch() {
    stopwatchRunning = false;
    endTime = null;
    showStopwatchValue();
    startElapsedEffect();
    setTimeout(function () { stopElapsedEffect() }, 300000); // 300000 ms = 5 min
  }

  function startElapsedEffect() {
    alarmAudio = new Audio('/Content/Sounds/Alarm.mp3');
    alarmAudio.loop = true;
    alarmAudio.play();
    $('.stopwatch-current').addClass('stopwatch-finished');
  }

  function stopElapsedEffect() {
    if (alarmAudio != null) {
      alarmAudio.pause();
      alarmAudio = null;
    }
    $('.stopwatch-current').removeClass('stopwatch-finished');
  }

  function setStopwatchTimeout() {
    setTimeout(stopwatchTick, 500);
  }

  function stopwatchTick() {
    if (!stopwatchRunning) {
      return;
    }
    var remainingSeconds = getRemainingTimeInSeconds();
    if (remainingSeconds <= 0) {
      stopStopwatch();
    }
    else {
      showStopwatchValue();
      setStopwatchTimeout();
    }
  }

  function getRemainingTimeInSeconds() {
    if (stopwatchRunning && endTime != null) {
      return Math.round((endTime - new Date()) / 1000);
    } else {
      return 0;
    }
  }

  function showStopwatchValue() {
    var minutes = 0;
    var seconds = 0;
    var remainingSeconds = getRemainingTimeInSeconds();

    if (remainingSeconds > 0) {
      minutes = Math.floor(remainingSeconds / 60);
      seconds = remainingSeconds - (minutes * 60);
    }
    var displayValue = pad(minutes, 2) + ":" + pad(seconds, 2);
    $('.stopwatch-current').text(displayValue);
  }

  function pad(num, size) {
    var s = num + "";
    while (s.length < size) s = "0" + s;
    return s;
  }


</script>